== Internals

A stampede consists of two components, the tracer and the herd.

=== Tracer

The tracer keeps track of the processes of the target application.

When started, it will start tracing process-related events of the
application top supervisor, and set the `set_on_spawn` flag so
processes spawned by it from then on are also traced.

Next, it will explore the supervision tree of the top supervisor
and set up the same tracing for them. After this, any processes
spawned by processes in the supervison tree are automatically
traced.

There may still be some unsupervised processes left untraced, so
the final step is to explore all processes with a pid higher
than the top supervisor's, and trace them if they belong to
the target application. This step is on a best-effort basis,
some of the unsupervised processes may still be left untraced.
But since unsupervised processes are supposedly short-lived,
it is usually of little consequence.

Along the way, the tracer also collects the pids of the processes
it traces (except the top supervisor) in an `ets` table. This table
is forthwith updated as trace messages pour in, adding newly spawned
processes and removing the exited ones.

The tracer also establishes a monitor on the top supervisor. When
it exits, the tracer will crash as well, as there is no point
in continuing the stampede.

=== Herd

The herd does the actual stampeding.

It will fetch the list of target pids maintained by the associated
tracer, shuffle it, then use the callback function on the pids to
until it has found one it is allowed to kill, and kill it forthwith.
+
Then it sets a timer to repeat the above process after a while.
