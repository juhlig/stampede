= stampede:start_herd(3)

== Name

stampede:start_herd - Start a stampede

== Description

[source,erlang]
----
start_herd(Ref    :: ref()
           Target :: target(),
           Opts   :: opts())
    -> supervisor:startchild_ret()
----

Start stampeding the specified application or supervisor with the given options.

[source,erlang]
----
start_herd(Ref    :: term(),
           Target :: target())
    -> supervisor:startchild_ret()
----

Start stampeding the specified application or supervisor with default options.

The processes and ports belonging to the given application or supervisor will
only be traced, but not killed  before the stampede is actually activated via
`stampede:activate/1`.

== Arguments

Ref::

An identifier for the stampede.

Target::

The target application or supervisor.
+
* If the target is an application, it must be given as `{application, AppName}`.
* If the target is a supervisor, it must be given as `{supervisor, SupRef}`.

Opts::

Options controlling the behavior of the stampede. The available
options are documented in link:man:stampede(3)[stampede(3)].

== Return value

An `ok` tuple is returned on success, containing the pid of the
top-level supervisor of the stampede.

An `error` tuple is returned on error, the reason may be any term.

An `error` exception is generated if the target application is not running
or is a library application, or if the target supervisor is not running.

== Examples

.Stampede the `my_app` application with default options

[source,erlang]
----
{ok, _}=stampede:start_herd(my_stampede, {application, my_app}).
----

.Stampede the `my_app` application with a 0.1s interval between kills

[source,erlang]
----
{ok, _}=stampede:start_herd(my_stampede, {application, my_app}, #{interval => {100, 100}}).
----

.Stampede the supervisor registered as `my_sup` with default options

[source,erlang]
----
{ok, _}=stampede:start_herd(my_stampede, {supervisor, my_sup}).
----

== See also

link:man:stampede:stop_herd(3)[stampede:stop_herd(3)]
link:man:stampede:activate(3)[stampede:activate(3)]
link:man:stampede_callbacks(3)[stampede_callbacks(3)]
