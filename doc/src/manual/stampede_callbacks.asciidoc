= stampede_callbacks(3)

== Name

stampede_callbacks - Callback generators

== Description

The `stampede_callbacks` module provides functions for generating
often-needed callbacks for the `before_kill` option.

[source,erlang]
----
if_allof([stampede:callback()])
    -> stampede:callback()
----

Create a function that returns `true` if all of the functions given
to it return `true`, `false` otherwise.

[source,erlang]
----
if_anyof([stampede:callback()])
    -> stampede:callback()
----

Create a function that returns `true` if any of the functions given
to it returns `true`, `false` otherwise.

[source,erlang]
----
if_any()
    -> fun((pid() | port()) -> true)
----

Create a function that always returns `true`.

[source,erlang]
----
if_child(Depth :: (pos_integer() | infinity),
         Supervisor :: supervisor:sup_ref())
    -> stampede:callback()
----

Create a function that returns `true` if the argument given to it is a
process identifier for a process that lives under the tree of the given
supervisor, down to the given depth, otherwise `false`.

[source,erlang]
----
if_module(Modules :: [module()])
    -> stampede:callback()
----

Create a function that returns `true` if the argument given to it
is a process identifier whose initial call was made to any of the given
modules, `false` otherwise. 

[source,erlang]
----
if_not(Fun :: stampede:callback())
    -> stampede:callback().
----

Create a function that negates the result of the given function.

[source,erlang]
----
if_port()
    -> stampede:callback()
----

Create a function that returns `true` if the argument given to it
is a port identifier, `false` otherwise.

[source,erlang]
----
if_portinfo(Item :: atom(),
            Value :: term())
    -> stampede:callback()
----

Creates a function that returns `true` if the argument given to it
is a port identifier, and for which the value of the port info item
specified by `Item` equals the value specified by `Value`, `false`
otherwise.

[source,erlang]
----
if_portname(Name :: term())
    -> stampede:callback()
----

Creates a function that returns `true` if the argument given to it
is a port identifier whose name equals the value specified by `Name`,
`false` otherwise.

[source,erlang]
----
if_process()
    -> stampede:callback()
----

Create a function that returns `true` if the argument given to it
is a process identifier, `false` otherwise.

[source,erlang]
----
if_sctp()
    -> stampede:callback()
----

Create a function that returns `true` if the argument given to it
is a port identifier for a SCTP socket, `false` otherwise.

[source,erlang]
----
if_supervisor()
    -> stampede:callback()
----

Create a function that returns `true` if the argument given to it
is the process identifier of a supervisor, `false` otherwise.

[source,erlang]
----
if_tcp()
    -> stampede:callback()
----

Create a function that returns `true` if the argument given to it
is a port identifier for a TCP socket, `false` otherwise.

[source,erlang]
----
if_udp()
    -> stampede:callback()
----

Create a function that returns `true` if the argument given to it
is a port identifier for an UDP socket, `false` otherwise.

== Changelog

* *0.3.0*: The generated callback functions also accept ports now.
* *0.3.0*: Added  functions `if_allof`, `if_anyof`, `if_port`,
           `if_process`, `if_port`, `if_portinfo`, `if_portname`,
           `if_sctp`, `if_tcp` and `if_udp`.
* *0.6.0*: `if_tcp` now also identifies TCP sockets using the
           socket backend for `gen_tcp`/`inet` that was introduced
           as an experimental feature in OTP/23.

== See also

link:man:stampede:start_herd(3)[stampede:start_herd(3)]
